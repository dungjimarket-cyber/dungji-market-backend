name: Deploy Backend to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "."
          target: "~/dungji-market-backend"
          rm: true
          strip_components: 0

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/dungji-market-backend

            echo "üõë Stopping all existing containers..."
            # Stop both dev and prod configurations to avoid conflicts
            sudo docker-compose down --remove-orphans || true
            sudo docker-compose -f docker-compose.prod.yml down --remove-orphans || true

            echo "üßπ Cleaning up Docker resources..."
            sudo docker container prune -f || true
            sudo docker network prune -f || true

            echo "üèóÔ∏è Building and starting production containers..."
            sudo docker-compose -f docker-compose.prod.yml up -d --build --force-recreate

            echo "‚è≥ Waiting for services to start..."
            sleep 20

            echo "üìä Checking container status..."
            sudo docker-compose -f docker-compose.prod.yml ps

            echo "‚úÖ Deployment complete"