# Generated by Django 5.0.7 on 2025-01-22 00:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectronicsRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '전자제품 지역',
                'verbose_name_plural': '전자제품 지역 관리',
                'db_table': 'used_electronics_regions',
            },
        ),
        migrations.CreateModel(
            name='UsedElectronics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory', models.CharField(choices=[('laptop', '노트북/컴퓨터'), ('tv', 'TV/모니터'), ('game', '게임기'), ('camera', '카메라'), ('audio', '음향기기'), ('home', '생활가전'), ('etc', '기타')], max_length=50, verbose_name='카테고리')),
                ('brand', models.CharField(max_length=50, verbose_name='브랜드')),
                ('model_name', models.CharField(max_length=100, verbose_name='모델명')),
                ('purchase_period', models.CharField(choices=[('1month', '1개월 이내'), ('3months', '3개월'), ('6months', '6개월'), ('1year', '1년'), ('over', '1년 이상')], max_length=20, verbose_name='사용기간')),
                ('condition_grade', models.CharField(choices=[('S', 'S급'), ('A', 'A급'), ('B', 'B급'), ('C', 'C급')], max_length=1, verbose_name='상태등급')),
                ('condition_description', models.TextField(blank=True, max_length=500, null=True, verbose_name='상태설명')),
                ('has_box', models.BooleanField(default=False, verbose_name='박스포함')),
                ('has_charger', models.BooleanField(default=False, verbose_name='충전기/전원선포함')),
                ('other_accessories', models.CharField(blank=True, max_length=200, verbose_name='기타구성품')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(99000000)], verbose_name='판매가격')),
                ('min_offer_price', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99000000)], verbose_name='최소제안가격')),
                ('accept_offers', models.BooleanField(default=False, verbose_name='가격제안허용')),
                ('description', models.TextField(max_length=2000, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='상품설명')),
                ('region_type', models.CharField(default='local', max_length=20, verbose_name='지역 유형')),
                ('region_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='지역명 백업')),
                ('meeting_place', models.CharField(max_length=200, verbose_name='거래요청사항')),
                ('has_warranty_card', models.BooleanField(default=False, verbose_name='보증서보유')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='시리얼넘버')),
                ('warranty_end_date', models.DateField(blank=True, null=True, verbose_name='보증기한')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='구매일')),
                ('extra_specs', models.JSONField(blank=True, default=dict, verbose_name='추가사양')),
                ('status', models.CharField(choices=[('active', '판매중'), ('trading', '거래중'), ('sold', '판매완료'), ('deleted', '삭제됨')], default='active', max_length=20, verbose_name='거래상태')),
                ('view_count', models.IntegerField(default=0, verbose_name='조회수')),
                ('offer_count', models.IntegerField(default=0, verbose_name='제안수')),
                ('favorite_count', models.IntegerField(default=0, verbose_name='찜수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.region', verbose_name='거래지역')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_electronics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '전자제품/가전',
                'verbose_name_plural': '전자제품/가전 관리',
                'db_table': 'used_electronics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ElectronicsTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_price', models.IntegerField(verbose_name='거래가격')),
                ('status', models.CharField(choices=[('in_progress', '거래중'), ('completed', '거래완료'), ('cancelled', '거래취소')], default='in_progress', max_length=20)),
                ('seller_completed', models.BooleanField(default=False, verbose_name='판매자 완료')),
                ('buyer_completed', models.BooleanField(default=False, verbose_name='구매자 완료')),
                ('cancellation_reason', models.CharField(blank=True, max_length=50, verbose_name='취소사유')),
                ('cancellation_detail', models.TextField(blank=True, verbose_name='취소상세사유')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='거래시작일')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='거래완료일')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electronics_purchases', to=settings.AUTH_USER_MODEL)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_electronics_trades', to=settings.AUTH_USER_MODEL, verbose_name='취소자')),
                ('electronics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='used_electronics.usedelectronics')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electronics_sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '전자제품 거래',
                'verbose_name_plural': '전자제품 거래 관리',
                'db_table': 'used_electronics_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ElectronicsOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000)], verbose_name='제안가격')),
                ('message', models.CharField(blank=True, max_length=200, verbose_name='메시지')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('accepted', '수락됨'), ('rejected', '거절됨'), ('cancelled', '취소됨')], default='pending', max_length=20, verbose_name='상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='제안일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electronics_offers', to=settings.AUTH_USER_MODEL)),
                ('electronics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='used_electronics.usedelectronics')),
            ],
            options={
                'verbose_name': '전자제품 가격제안',
                'verbose_name_plural': '전자제품 가격제안 관리',
                'db_table': 'used_electronics_offers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ElectronicsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='electronics/%Y/%m/%d/', verbose_name='이미지')),
                ('is_primary', models.BooleanField(default=False, verbose_name='대표이미지')),
                ('order', models.IntegerField(default=0, verbose_name='순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='업로드일')),
                ('electronics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='used_electronics.usedelectronics')),
            ],
            options={
                'verbose_name': '전자제품 이미지',
                'verbose_name_plural': '전자제품 이미지 관리',
                'db_table': 'used_electronics_images',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ElectronicsFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='찜한날짜')),
                ('electronics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='used_electronics.usedelectronics')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electronics_favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '전자제품 찜',
                'verbose_name_plural': '전자제품 찜 관리',
                'db_table': 'used_electronics_favorites',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'electronics')},
            },
        ),
        migrations.AddField(
            model_name='electronicsregion',
            name='electronics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='used_electronics.usedelectronics'),
        ),
        migrations.AddField(
            model_name='electronicsregion',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electronics_regions', to='api.region'),
        ),
        migrations.AddIndex(
            model_name='usedelectronics',
            index=models.Index(fields=['status', '-created_at'], name='used_electr_status_f1e9e1_idx'),
        ),
        migrations.AddIndex(
            model_name='usedelectronics',
            index=models.Index(fields=['seller', 'status'], name='used_electr_seller__c4a8f1_idx'),
        ),
        migrations.AddIndex(
            model_name='usedelectronics',
            index=models.Index(fields=['subcategory', 'status'], name='used_electr_subcate_3e2d8e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='electronicsregion',
            unique_together={('electronics', 'region')},
        ),
    ]